{
  "name": "Iota",
  "tagline": "Repo voor IoT workshop Topiconf 2016",
  "body": "## Workshop Internet of Things\r\n\r\nVolg deze handleiding om snel wat leuks met je iota bordje te kunnen ontwikkelen! \r\n\r\n**Voor de workshop**\r\n\r\nInstalleer de volgende software **voordat de workshop begint**:\r\n\r\n- Download en installeer de laatste Arduino IDE (nu 1.6.9) voor jouw OS uit deze directory:\r\n\t-  [installs@Google Drive](https://drive.google.com/folderview?id=0BySKoKNET9qkZlQxTGVXdlo1b0k){:target=\"_blank\"}\r\n- Installeer de driver voor de USB-chip van het ESP8266 bordje (alleen nodig voor Mac en Windows). Deze staan in dezelfde directory als de Arduino IDE.\r\n- Start de Arduino IDE en ga `Arduino`, `Preferences` en vul bij `Additional Boards Manager URLs` dit in: `http://arduino.esp8266.com/stable/package_esp8266com_index.json`\r\n- Ga naar `Tools`, `Board: ..`, `Boards Manager` en zoek hier op 'esp8266'. Installeer de laatste versie (2.2.0).\r\n- Selecteer onder `Tools`, `Board`, `WeMoS D1 R2 & mini`\r\n- Nu heb je een aantal libraries nodig. Download de **3** ZIP-files uit de directory en voeg deze toe aan de Arduino IDE via `Sketch`, `Include library`, `Add .ZIP Library`. \r\n\t- [libraries@Google Drive](https://drive.google.com/folderview?id=0B8pTpNZu7QutWDUyU2FjX2xZT2M){:target=\"_blank\"}\r\n- We hebben een testsketch gemaakt, download deze hier:\r\n\t-  [iota-workshop.zip](https://drive.google.com/uc?export=download&id=0B8pTpNZu7QutcUxvRGRIRVBrdFU){:target=\"_blank\"}\r\n-  Pak de ZIP-file uit en open het `iota-workshop.ino` bestand met de Arduino IDE.\r\n- Compile de sketch via `Sketch`, `Verify/Compile`. Dit zou nu moeten lukken!\r\n- Tot op de workshop!\r\n\r\n**Tijdens de workshop**\r\n\r\nAls je eenmaal in het bezit bent van een iota bordje sluit je deze via USB aan. Selecteer vervolgens onder `Tools` de volgende opties (vanaf `Board`):\r\n\r\n![Settings](https://raw.githubusercontent.com/topicusonderwijs/iota/master/assets/settings-tools.png)\r\n\r\nDe waarde voor `port` zal per OS verschillen. \r\n\r\nVervolgens kun je via `Sketch`, `Upload` je code in de ESP8266 laden. \r\n\r\nDe testsketch verbindt met wifi en toont initieel de waarde van de twee sensoren. Met de knop je kun je het volgende:\r\n\r\n* 1x klikken: led aan/uit\r\n* dubbelklikken: rgb leds aan/uit\r\n* vasthouden: sensorwaarden tonen\r\n\r\nSucces!\r\n\r\n**Tips**\r\n\r\nIn de Arduino IDE vind je onder `File`, `Examples` meer voorbeelden van de gebruikte libraries. O.a. `ESP8266HTTPClient` is handig om simpele HTTP requests te doen.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}